name = "uv"

[arguments.--color]
name = "--color"
choices = ["auto", "always", "never"]
selected = "always"

[commands]
u = { name = "update", template = ["uv", "self", "update"] }
V = { name = "version", template = ["uv", "--version"] }

[menus.d]
name = "Dependency management"

[menus.d.configuration]
sort_commands = false

[menus.d.arguments]
"-d" = { flag = "--dev", description = "Add/remove the requirements to the development dependency group." }
"-o" = { name = "--optional", description = "Add/remove the requirements to the package's optional dependencies for the specified extra." }
"-e" = { flag = "--editable", description = "Add the requirements as editable." }
"-E" = { name = "--extra", description = "Extras to enable for the dependency." }
"-p" = { flag = "--prerelease", description = "Allow prerelease versions." }
"-i" = { flag = "--index-url", description = "Base URL of the Python Package Index." }
"--no-deps" = { flag = "--no-deps", description = "Don't install package dependencies." }

[menus.d.commands.a]
name = "add"
description = "Install packages"
template = ["uv", "add", { include = "*" }, { name = "package", multi = true, suggestions = { command = "uv pip list --exclude-editable" } }]

[menus.d.commands.r]
name = "remove"
description = "Remove packages"
template = [
  "uv",
  "remove",
  { include = "*" },
  { name = "package", multi = true, suggestions = { command = "uv pip list --exclude-editable | cut -w -f1 | tail -n +3" } },
]

[menus.d.commands.u]
name = "update"
description = "Update packages"
template = ["uv", "add", "-U", { include = "*" }, { name = "package", multi = true, suggestions = { command = "uv pip list --exclude-editable | cut -w -f1 | tail -n +3" } }]

[menus.d.commands.i]
name = "info"
description = "Show information about a package"
template = ["uv", "pip", "show", { include = "*" }, { name = "package", suggestions = { command = "uv pip list --exclude-editable | cut -w -f1 | tail -n +3" } }]

[menus.d.commands.l]
name = "list"
description = "List all installed packages"
template = ["uv", "pip", "list"]

[menus.d.commands.o]
name = "outdated"
description = "List outdated packages"
template = ["uv", "pip", "list", "--exclude-editable", "--outdated", "--quiet"]

[menus.v]
name = "Virtual environment"

[menus.v.arguments]
"-p" = { name = "--python", description = "The Python executable to use." }
"--system-site-packages" = { flag = "--system-site-packages", description = "Give the virtual environment access to the system site-packages dir." }

[menus.v.commands.c]
name = "create"
description = "Create a new virtual environment"
template = ["uv", "venv", { include = "*" }, { name = "path", value = ".venv" }]

[menus.s]
name = "Sync dependencies"

[menus.s.arguments]
"--no-deps" = { flag = "--no-deps", description = "Don't install package dependencies." }
"-U" = { flag = "--upgrade", description = "Upgrade all specified packages to the newest available version." }
"--prerelease" = { flag = "--prerelease", description = "Include pre-release and development versions." }

[menus.s.commands.s]
name = "sync"
description = "Synchronize project dependencies with the lock file"
template = ["uv", "sync", { include = "*" }]

[menus.c]
name = "Cache operations"

[menus.c.commands.c]
name = "clean"
description = "Clean the uv cache"
template = ["uv", "cache", "clean", { include = "*" }]

[menus.c.commands.d]
name = "dir"
description = "Show cache directory location"
template = ["uv", "cache", "dir", { include = "*" }]

[menus.c.commands.p]
name = "prune"
description = "Prune all unreachable objects from the cache"
template = ["uv", "cache", "prune", { include = "*" }]
